
---- [ BASIC SELECT ]

--1. 
SELECT DEPARTMENT_NAME AS "학과 명",CATEGORY AS "계열" FROM TB_DEPARTMENT;

--2. 
SELECT DEPARTMENT_NAME||'의 정원은 ' ||CAPACITY|| '명 입니다.' AS "학과별 정원"  FROM TB_DEPARTMENT ;

--3. 
SELECT STUDENT_NAME FROM TB_STUDENT
WHERE ABSENCE_YN='Y' 
AND DEPARTMENT_NO=(SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '국어국문학과')
AND SUBSTR(STUDENT_SSN,8,1)='2';

--4.
SELECT STUDENT_NAME FROM TB_STUDENT  WHERE STUDENT_NO IN('A513079','A513090','A513091','A513110','A513119');

--5
SELECT DEPARTMENT_NAME, CATEGORY FROM TB_DEPARTMENT WHERE CAPACITY BETWEEN 20 AND 30;

--6. 
SELECT PROFESSOR_NAME FROM TB_PROFESSOR WHERE DEPARTMENT_NO IS NULL;

--7. 
SELECT STUDENT_NAME FROM TB_STUDENT WHERE DEPARTMENT_NO IS NULL;

--8. 
SELECT CLASS_NO FROM TB_CLASS WHERE PREATTENDING_CLASS_NO IS NOT NULL;

--9. 
SELECT CATEGORY FROM TB_DEPARTMENT GROUP BY CATEGORY;

--10. 
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN FROM TB_STUDENT
WHERE TO_CHAR(ENTRANCE_DATE,'YY) = '02' AND STUDENT_ADDRESS LIKE '%전주%' AND ABSENCE_YN='N';


---- [ ADDITIONAL SELECT - 함수 ]

--1.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, ENTRANCE_DATE 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = '002' ORDER BY ENTRANCE_DATE;

--2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN  FROM TB_PROFESSOR
WHERE LENGTH(PROFESSOR_NAME) <> 3;

--3.
SELECT  PROFESSOR_NAME 교수이름, TRUNC(MONTHS_BETWEEN(SYSDATE,TO_DATE('19'||SUBSTR(PROFESSOR_SSN,1,6),'YYYYMMDD'))/12) 나이
FROM TB_PROFESSOR
WHERE SUBSTR(PROFESSOR_SSN,8,1)='1' 
ORDER BY 나이

--4.
SELECT SUBSTR(PROFESSOR_NAME,2,2) 이름
FROM TB_PROFESSOR

--5.
--TO_DATE(ENTRANCE_DATE,'MM/DD/YY') 입학일, TO_DATE('19'||SUBSTR(STUDENT_SSN,1,6),'YYYYMMDD') 생년월일
-- (TO_NUMBER(TO_CHAR(ENTRANCE_DATE, 'YYYY')) - TO_NUMBER('19'||SUBSTR(STUDENT_SSN,1,2)) + 1) 입학시 나이
SELECT  STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE (TO_NUMBER(TO_CHAR(ENTRANCE_DATE, 'YYYY')) - TO_NUMBER('19'||SUBSTR(STUDENT_SSN,1,2)) + 1) > 19;

--6.
SELECT TO_CHAR(TO_DATE('20201225','YYYYMMDD'),'DAY') FROM DUAL;

--7.
SELECT TO_CHAR(TO_DATE('99/10/11','YY/MM/DD'),'YYYY-MM-DD'), TO_CHAR(TO_DATE('49/10/11','YY/MM/DD'),'YYYY-MM-DD'), 
TO_CHAR(TO_DATE('99/10/11','RR/MM/DD'),'YYYY-MM-DD'), TO_CHAR(TO_DATE('49/10/11','RR/MM/DD'),'YYYY-MM-DD') 
FROM DUAL;

--8. 
SELECT STUDENT_NO, STUDENT_NAME FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%'

--9.
SELECT ROUND(AVG(POINT),1) 평점 FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

--10.
SELECT DEPARTMENT_NO 학과번호, COUNT(STUDENT_NO) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;


--11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

--12.
--WHERE STUDENT_NO = 'A241053'
SELECT SUBSTR(TERM_NO,1,4) 년도, ROUND(AVG(POINT),1) "년도 별 평점"
FROM  TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO,1,4)
ORDER BY 년도;

--13.
SELECT DEPARTMENT_NO 학과코드명, SUM(DECODE(ABSENCE_YN,'Y',1,0)) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

--14.
SELECT STUDENT_NAME 동일이름, COUNT(STUDENT_NAME) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(STUDENT_NAME) > 1;

--15. 
SELECT SUBSTR(TERM_NO,1,4) 년도, SUBSTR(TERM_NO,5,2) 학기, ROUND(AVG(POINT),1) "년도 별 평점"
FROM  TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP (SUBSTR(TERM_NO,1,4),SUBSTR(TERM_NO,5,2));



---- [ ADDITIONAL SELECT - OPTION ]

--1.
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS 주소지 
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

--2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
ORDER BY STUDENT_SSN;

--3.
SELECT STUDENT_NAME 학생이름, STUDENT_NO 학번, STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE STUDENT_NO NOT LIKE 'A%'
ORDER BY STUDENT_NAME;

--4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN FROM TB_PROFESSOR
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '법학과')
ORDER BY PROFESSOR_SSN;

--5.
SELECT STUDENT_NO, POINT FROM TB_GRADE
WHERE CLASS_NO = 'C3118100'
ORDER BY POINT DESC, STUDENT_NO ASC;

--6.
SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME 
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE S.DEPARTMENT_NO = D.DEPARTMENT_NO
ORDER BY S.STUDENT_NAME;

--7. 
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME
FROM TB_CLASS C, TB_DEPARTMENT D
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO;


--8.
SELECT C.CLASS_NAME, P.PROFESSOR_NAME 
FROM TB_CLASS C, TB_PROFESSOR P, TB_CLASS_PROFESSOR CP
WHERE C.CLASS_NO = CP.CLASS_NO AND CP.PROFESSOR_NO = P.PROFESSOR_NO;

--9.
SELECT C.CLASS_NAME, P.PROFESSOR_NAME 
FROM TB_CLASS C, TB_PROFESSOR P, TB_CLASS_PROFESSOR CP, TB_DEPARTMENT D
WHERE C.CLASS_NO = CP.CLASS_NO AND CP.PROFESSOR_NO = P.PROFESSOR_NO
AND P.DEPARTMENT_NO = D.DEPARTMENT_NO AND D.CATEGORY = '인문사회';

--10
SELECT S.STUDENT_NO 학번, S.STUDENT_NAME "학생 이름", ROUND(AVG(G.POINT),1) "전체 평점"
FROM TB_GRADE G, TB_STUDENT S, TB_DEPARTMENT D
WHERE G.STUDENT_NO = S.STUDENT_NO AND S.DEPARTMENT_NO = D.DEPARTMENT_NO
AND D.DEPARTMENT_NAME = '음악학과'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME;

--11.
SELECT D.DEPARTMENT_NAME 학과이름, S.STUDENT_NAME 학생이름, P.PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT S, TB_DEPARTMENT D, TB_PROFESSOR P
WHERE S.STUDENT_NO = 'A313047' AND S.DEPARTMENT_NO = D.DEPARTMENT_NO AND S.COACH_PROFESSOR_NO = P.PROFESSOR_NO;

--12.
SELECT S.STUDENT_NAME, G.TERM_NO AS TERM_NAME
FROM TB_CLASS C, TB_GRADE G, TB_STUDENT S
WHERE G.TERM_NO LIKE '200%' AND C.CLASS_NO = G.CLASS_NO
AND S.STUDENT_NO = G.STUDENT_NO AND C.CLASS_NAME = '인간관계론';

--13.
SELECT C.CLASS_NAME, D.DEPARTMENT_NAME, CP.PROFESSOR_NO
FROM TB_CLASS_PROFESSOR CP, TB_CLASS C, TB_DEPARTMENT D
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO AND C.CLASS_NO = CP.CLASS_NO(+)
AND CP.PROFESSOR_NO IS NULL AND D.CATEGORY = '예체능';

--14.
SELECT S.STUDENT_NAME 학생이름, NVL(P.PROFESSOR_NAME, '지도교수 미지정') 지도교수 
FROM TB_DEPARTMENT D, TB_STUDENT S, TB_PROFESSOR P
WHERE D.DEPARTMENT_NO = S.DEPARTMENT_NO AND P.PROFESSOR_NO(+) = S.COACH_PROFESSOR_NO
AND D.DEPARTMENT_NAME = '서반아어학과'
ORDER BY S.ENTRANCE_DATE ASC;

--15.
SELECT S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME, ROUND(AVG(G.POINT),1) 평점
FROM TB_STUDENT S, TB_GRADE G, TB_DEPARTMENT D
WHERE S.STUDENT_NO = G.STUDENT_NO AND S.DEPARTMENT_NO = D.DEPARTMENT_NO
AND S.ABSENCE_YN = 'N'
GROUP BY S.STUDENT_NO, S.STUDENT_NAME, D.DEPARTMENT_NAME
HAVING AVG(G.POINT) >= 4.0;

--16.
SELECT C.CLASS_NO, C.CLASS_NAME, ROUND(AVG(POINT),1) AS AVG
FROM TB_GRADE G, TB_DEPARTMENT D, TB_CLASS C
WHERE C.DEPARTMENT_NO = D.DEPARTMENT_NO AND C.CLASS_NO = G.CLASS_NO
AND C.CLASS_TYPE LIKE '전공%' AND D.DEPARTMENT_NAME = '환경조경학과'
GROUP BY C.CLASS_NO, C.CLASS_NAME;

--17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO FROM TB_STUDENT WHERE STUDENT_NAME = '최경희');

--18.
WITH AVG_POINT AS
(
SELECT S.STUDENT_NO, S.STUDENT_NAME, AVG(G.POINT) AS SCORE
FROM TB_GRADE G,TB_STUDENT S,TB_DEPARTMENT D
WHERE G.STUDENT_NO = S.STUDENT_NO AND S.DEPARTMENT_NO = D.DEPARTMENT_NO
GROUP BY S.STUDENT_NO, S.STUDENT_NAME
)
SELECT STUDENT_NO, STUDENT_NAME, SCORE
FROM AVG_POINT 
WHERE SCORE = (SELECT MAX(SCORE) FROM AVG_POINT)
;

--19.
SELECT D.DEPARTMENT_NAME "계열 학과명", ROUND(AVG(G.POINT),1) 전공평점
FROM TB_GRADE G, TB_DEPARTMENT D, TB_CLASS C
WHERE D.DEPARTMENT_NO = C.DEPARTMENT_NO AND C.CLASS_NO = G.CLASS_NO
AND D.CATEGORY = (SELECT CATEGORY FROM TB_DEPARTMENT WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY D.DEPARTMENT_NAME;


---- [ DDL ]
--1.
CREATE TABLE TB_CATAGORY (
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y' 
);

--2.    
CREATE TABLE TB_CLASS_TYPE (
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

--3.
ALTER TABLE TB_CATAGORY ADD CONSTRAINT TB_CATAGORY_PK PRIMARY KEY(NAME);

--4.
ALTER TABLE TB_CLASS_TYPE 
MODIFY NAME NOT NULL;

--5.
ALTER TABLE TB_CATAGORY
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10);

ALTER TABLE TB_CLASS_TYPE
MODIFY NAME VARCHAR2(20);

--6.
ALTER TABLE TB_CATAGORY
RENAME COLUMN NAME TO CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;

--7.
SELECT TABLE_NAME, CONSTRAINT_NAME, CONSTRAINT_TYPE FROM USER_CONSTRAINTS
WHERE TABLE_NAME IN ('TB_CATAGORY','TB_CLASS_TYPE');

ALTER TABLE TB_CATAGORY
RENAME CONSTRAINT TB_CATAGORY_PK TO PK_CATAGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C0010957 TO PK_CLASS_TYPE;

--8.
INSERT INTO TB_CATAGORY VALUES ('공학','Y');
INSERT INTO TB_CATAGORY VALUES ('자연과학','Y');
INSERT INTO TB_CATAGORY VALUES ('의학','Y');
INSERT INTO TB_CATAGORY VALUES ('예체능','Y');
INSERT INTO TB_CATAGORY VALUES ('인문사회','Y');
COMMIT;

--9.
ALTER TABLE TB_DEPARTMENT
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) REFERENCES TB_CATAGORY(CATEGORY_NAME);

--10.
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO 학번, STUDENT_NAME 이름, STUDENT_ADDRESS 주소 FROM TB_STUDENT;

--11.
CREATE OR REPLACE VIEW VW_지도면담
AS 
SELECT S.STUDENT_NAME 학생이름, D.DEPARTMENT_NAME 학과이름, P.PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT S, TB_DEPARTMENT D, TB_PROFESSOR P
WHERE S.COACH_PROFESSOR_NO = P.PROFESSOR_NO(+) AND S.DEPARTMENT_NO = D.DEPARTMENT_NO;

--12.
CREATE OR REPLACE VIEW VW_학과별학생수
AS 
SELECT D.DEPARTMENT_NAME, COUNT(S.STUDENT_NO) AS STUDENT_COUNT
FROM TB_STUDENT S, TB_DEPARTMENT D
WHERE D.DEPARTMENT_NO = S.DEPARTMENT_NO
GROUP BY D.DEPARTMENT_NAME;

--13.
UPDATE VW_학생일반정보 SET 이름 = '내이름'
WHERE 학번 = 'A213046'

SELECT * FROM VW_학생일반정보

--14.
CREATE OR REPLACE VIEW VW_학생일반정보
AS SELECT STUDENT_NO 학번, STUDENT_NAME 이름, STUDENT_ADDRESS 주소 FROM TB_STUDENT
WITH READ ONLY;

--15.
WITH CLASS_COUNT AS(
SELECT C.CLASS_NO 과목이름, C.CLASS_NAME 과목번호, COUNT(G.STUDENT_NO) "누적수강생수(명)"
FROM TB_GRADE G, TB_CLASS C
WHERE G.CLASS_NO = C.CLASS_NO
AND SUBSTR(G.TERM_NO,1,4) >= TO_CHAR((SYSDATE - 365*3),'YYYY')
GROUP BY C.CLASS_NO, C.CLASS_NAME
ORDER BY 3 DESC
)

SELECT * FROM CLASS_COUNT WHERE ROWNUM <=3;


---- [ DML ]

--1.
INSERT INTO TB_CLASS_TYPE VALUES('01','전공필수');
INSERT INTO TB_CLASS_TYPE VALUES('02','전공선택');
INSERT INTO TB_CLASS_TYPE VALUES('03','교양필수');
INSERT INTO TB_CLASS_TYPE VALUES('04','교양선택');
INSERT INTO TB_CLASS_TYPE VALUES('05','논문지도');

--2.
CREATE TABLE TB_학생일반정보
AS SELECT STUDENT_NO 학번, STUDENT_NAME 이름, STUDENT_ADDRESS 주소 FROM TB_STUDENT;

--3.
CREATE TABLE TB_국어국문학과
AS
SELECT S.STUDENT_NO 학번, S.STUDENT_NAME 학생이름, '19'||SUBSTR(S.STUDENT_SSN,1,2) 출생년도, P.PROFESSOR_NAME 교수이름
FROM TB_STUDENT S, TB_DEPARTMENT D, TB_PROFESSOR P
WHERE D.DEPARTMENT_NAME = '국어국문학과' AND S.DEPARTMENT_NO = D.DEPARTMENT_NO AND S.COACH_PROFESSOR_NO = P.PROFESSOR_NO(+)

--4.
UPDATE TB_DEPARTMENT
SET CAPACITY= ROUND(CAPACITY*1.1,0);

--5.
UPDATE TB_STUDENT
SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
WHERE STUDENT_NO = 'A413042'

--6.
UPDATE TB_STUDENT
SET STUDENT_SSN = SUBSTR(STUDENT_SSN,1,6);

--7.
UPDATE TB_GRADE
SET POINT = 3.5
WHERE STUDENT_NO = (SELECT STUDENT_NO 
                    FROM TB_STUDENT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                    WHERE STUDENT_NAME = '김명훈' 
                    AND DEPARTMENT_NAME = '의학과')
AND CLASS_NO = (SELECT CLASS_NO FROM TB_CLASS WHERE CLASS_NAME = '피부생리학');

--8.
DELETE FROM TB_GRADE
WHERE STUDENT_NO IN (SELECT STUDENT_NO FROM TB_STUDENT WHERE ABSENCE_YN='Y');

